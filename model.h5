# model_generator.py

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

# Define a very small CNN model
model = Sequential([
    Conv2D(16, (3,3), activation='relu', input_shape=(224, 224, 3)),
    MaxPooling2D(pool_size=(2,2)),
    Flatten(),
    Dense(64, activation='relu'),
    Dense(4, activation='softmax')  # 4 classes: Normal, Pneumonia, COVID-19, TB
])

# Compile model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Just create some dummy data (images + labels)
import numpy as np

# Create 100 fake images of size 224x224x3
X_dummy = np.random.rand(100, 224, 224, 3)

# Create 100 fake one-hot labels (4 classes)
y_dummy = tf.keras.utils.to_categorical(np.random.randint(0, 4, 100), num_classes=4)

# Train model on dummy data (very fast)
model.fit(X_dummy, y_dummy, epochs=3)

# Save the model as model.h5
model.save("model.h5")

print("âœ… model.h5 generated successfully!")
